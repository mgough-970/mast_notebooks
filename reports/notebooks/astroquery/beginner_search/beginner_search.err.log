Traceback (most recent call last):
  File "/usr/share/miniconda/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Set up our coordinates object
coord = SkyCoord(290.213503, -11.800746, unit='deg')

# Same search as above, now with a radius of 1 arcsecond
obsByRegion2 = Observations.query_region(coord, radius='1s')
len(obsByRegion2)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mHTTPError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[4], line 5[0m
[1;32m      2[0m coord [38;5;241m=[39m SkyCoord([38;5;241m290.213503[39m, [38;5;241m-[39m[38;5;241m11.800746[39m, unit[38;5;241m=[39m[38;5;124m'[39m[38;5;124mdeg[39m[38;5;124m'[39m)
[1;32m      4[0m [38;5;66;03m# Same search as above, now with a radius of 1 arcsecond[39;00m
[0;32m----> 5[0m obsByRegion2 [38;5;241m=[39m [43mObservations[49m[38;5;241;43m.[39;49m[43mquery_region[49m[43m([49m[43mcoord[49m[43m,[49m[43m [49m[43mradius[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43m1s[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m      6[0m [38;5;28mlen[39m(obsByRegion2)

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/astroquery/utils/class_or_instance.py:25[0m, in [0;36mclass_or_instance.__get__.<locals>.f[0;34m(*args, **kwds)[0m
[1;32m     23[0m [38;5;28;01mdef[39;00m [38;5;21mf[39m([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwds):
[1;32m     24[0m     [38;5;28;01mif[39;00m obj [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m---> 25[0m         [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mfn[49m[43m([49m[43mobj[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwds[49m[43m)[49m
[1;32m     26[0m     [38;5;28;01melse[39;00m:
[1;32m     27[0m         [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mfn([38;5;28mcls[39m, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwds)

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/astroquery/utils/process_asyncs.py:26[0m, in [0;36masync_to_sync.<locals>.create_method.<locals>.newmethod[0;34m(self, *args, **kwargs)[0m
[1;32m     22[0m [38;5;129m@class_or_instance[39m
[1;32m     23[0m [38;5;28;01mdef[39;00m [38;5;21mnewmethod[39m([38;5;28mself[39m, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m     24[0m     verbose [38;5;241m=[39m kwargs[38;5;241m.[39mpop([38;5;124m'[39m[38;5;124mverbose[39m[38;5;124m'[39m, [38;5;28;01mFalse[39;00m)
[0;32m---> 26[0m     response [38;5;241m=[39m [38;5;28;43mgetattr[39;49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43masync_method_name[49m[43m)[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m     27[0m     [38;5;28;01mif[39;00m kwargs[38;5;241m.[39mget([38;5;124m'[39m[38;5;124mget_query_payload[39m[38;5;124m'[39m) [38;5;129;01mor[39;00m kwargs[38;5;241m.[39mget([38;5;124m'[39m[38;5;124mfield_help[39m[38;5;124m'[39m):
[1;32m     28[0m         [38;5;28;01mreturn[39;00m response

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/astroquery/utils/class_or_instance.py:25[0m, in [0;36mclass_or_instance.__get__.<locals>.f[0;34m(*args, **kwds)[0m
[1;32m     23[0m [38;5;28;01mdef[39;00m [38;5;21mf[39m([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwds):
[1;32m     24[0m     [38;5;28;01mif[39;00m obj [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m---> 25[0m         [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mfn[49m[43m([49m[43mobj[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwds[49m[43m)[49m
[1;32m     26[0m     [38;5;28;01melse[39;00m:
[1;32m     27[0m         [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mfn([38;5;28mcls[39m, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwds)

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/astroquery/mast/observations.py:213[0m, in [0;36mObservationsClass.query_region_async[0;34m(self, coordinates, radius, pagesize, page)[0m
[1;32m    208[0m service [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_caom_cone
[1;32m    209[0m params [38;5;241m=[39m {[38;5;124m'[39m[38;5;124mra[39m[38;5;124m'[39m: coordinates[38;5;241m.[39mra[38;5;241m.[39mdeg,
[1;32m    210[0m           [38;5;124m'[39m[38;5;124mdec[39m[38;5;124m'[39m: coordinates[38;5;241m.[39mdec[38;5;241m.[39mdeg,
[1;32m    211[0m           [38;5;124m'[39m[38;5;124mradius[39m[38;5;124m'[39m: radius[38;5;241m.[39mdeg}
[0;32m--> 213[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_portal_api_connection[49m[38;5;241;43m.[39;49m[43mservice_request_async[49m[43m([49m[43mservice[49m[43m,[49m[43m [49m[43mparams[49m[43m,[49m[43m [49m[43mpagesize[49m[38;5;241;43m=[39;49m[43mpagesize[49m[43m,[49m[43m [49m[43mpage[49m[38;5;241;43m=[39;49m[43mpage[49m[43m)[49m

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/astroquery/utils/class_or_instance.py:25[0m, in [0;36mclass_or_instance.__get__.<locals>.f[0;34m(*args, **kwds)[0m
[1;32m     23[0m [38;5;28;01mdef[39;00m [38;5;21mf[39m([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwds):
[1;32m     24[0m     [38;5;28;01mif[39;00m obj [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m---> 25[0m         [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mfn[49m[43m([49m[43mobj[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwds[49m[43m)[49m
[1;32m     26[0m     [38;5;28;01melse[39;00m:
[1;32m     27[0m         [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mfn([38;5;28mcls[39m, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwds)

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/astroquery/mast/discovery_portal.py:362[0m, in [0;36mPortalAPI.service_request_async[0;34m(self, service, params, pagesize, page, **kwargs)[0m
[1;32m    359[0m     mashup_request[prop] [38;5;241m=[39m value
[1;32m    361[0m req_string [38;5;241m=[39m _prepare_service_request_string(mashup_request)
[0;32m--> 362[0m response [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_request[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mPOST[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mMAST_REQUEST_URL[49m[43m,[49m[43m [49m[43mdata[49m[38;5;241;43m=[39;49m[43mreq_string[49m[43m,[49m[43m [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mheaders[49m[43m,[49m
[1;32m    363[0m [43m                         [49m[43mretrieve_all[49m[38;5;241;43m=[39;49m[43mretrieve_all[49m[43m)[49m
[1;32m    365[0m [38;5;28;01mreturn[39;00m response

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/astroquery/mast/discovery_portal.py:189[0m, in [0;36mPortalAPI._request[0;34m(self, method, url, params, data, headers, files, stream, auth, retrieve_all)[0m
[1;32m    186[0m     [38;5;28;01mraise[39;00m [38;5;167;01mTimeoutError[39;00m([38;5;124m"[39m[38;5;124mTimeout limit of [39m[38;5;132;01m{}[39;00m[38;5;124m exceeded.[39m[38;5;124m"[39m[38;5;241m.[39mformat([38;5;28mself[39m[38;5;241m.[39mTIMEOUT))
[1;32m    188[0m [38;5;66;03m# Raising error based on HTTP status if necessary[39;00m
[0;32m--> 189[0m [43mresponse[49m[38;5;241;43m.[39;49m[43mraise_for_status[49m[43m([49m[43m)[49m
[1;32m    191[0m result [38;5;241m=[39m response[38;5;241m.[39mjson()
[1;32m    193[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m result:  [38;5;66;03m# kind of hacky, but col_config service returns nothing if there is an error[39;00m

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/requests/models.py:1021[0m, in [0;36mResponse.raise_for_status[0;34m(self)[0m
[1;32m   1016[0m     http_error_msg [38;5;241m=[39m (
[1;32m   1017[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00m[38;5;28mself[39m[38;5;241m.[39mstatus_code[38;5;132;01m}[39;00m[38;5;124m Server Error: [39m[38;5;132;01m{[39;00mreason[38;5;132;01m}[39;00m[38;5;124m for url: [39m[38;5;132;01m{[39;00m[38;5;28mself[39m[38;5;241m.[39murl[38;5;132;01m}[39;00m[38;5;124m"[39m
[1;32m   1018[0m     )
[1;32m   1020[0m [38;5;28;01mif[39;00m http_error_msg:
[0;32m-> 1021[0m     [38;5;28;01mraise[39;00m HTTPError(http_error_msg, response[38;5;241m=[39m[38;5;28mself[39m)

[0;31mHTTPError[0m: 503 Server Error: Service Unavailable for url: https://mast.stsci.edu/api/v0/invoke
HTTPError: 503 Server Error: Service Unavailable for url: https://mast.stsci.edu/api/v0/invoke

