Traceback (most recent call last):
  File "/usr/share/miniconda/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/share/miniconda/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
lpm_sgra = -6.379 # +- 0.026
bpm_sgra = -0.202 # +- 0.019

lpm0 = np.array(tab['lpm'])
bpm0 = np.array(tab['bpm'])
lpmerr0 = np.array(tab['lpmerr'])
bpmerr0 = np.array(tab['bpmerr'])
pmtot0 = np.sqrt((bpm0-bpm_sgra)**2+(lpm0-lpm_sgra)**2)
pmerr0 = np.sqrt(bpmerr0**2+lpmerr0**2)
dev = tab['pmdev']

# sort samples by decreasing PM
wpmh = np.where((pmtot0 > 15) & (pmerr0 < 1.0) & (dev < 5))[0]
wpmh = wpmh[np.argsort(-pmtot0[wpmh])]

print(f"Plotting {len(wpmh)} objects")
for o in tab["ObjID"][wpmh]:
    positions(o)
------------------

----- stdout -----
Plotting 31 objects
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mSSLEOFError[0m                               Traceback (most recent call last)
File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/urllib3/connectionpool.py:703[0m, in [0;36mHTTPConnectionPool.urlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    702[0m [38;5;66;03m# Make the request on the httplib connection object.[39;00m
[0;32m--> 703[0m httplib_response [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_make_request[49m[43m([49m
[1;32m    704[0m [43m    [49m[43mconn[49m[43m,[49m
[1;32m    705[0m [43m    [49m[43mmethod[49m[43m,[49m
[1;32m    706[0m [43m    [49m[43murl[49m[43m,[49m
[1;32m    707[0m [43m    [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout_obj[49m[43m,[49m
[1;32m    708[0m [43m    [49m[43mbody[49m[38;5;241;43m=[39;49m[43mbody[49m[43m,[49m
[1;32m    709[0m [43m    [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mheaders[49m[43m,[49m
[1;32m    710[0m [43m    [49m[43mchunked[49m[38;5;241;43m=[39;49m[43mchunked[49m[43m,[49m
[1;32m    711[0m [43m[49m[43m)[49m
[1;32m    713[0m [38;5;66;03m# If we're going to release the connection in ``finally:``, then[39;00m
[1;32m    714[0m [38;5;66;03m# the response doesn't need to know about the connection. Otherwise[39;00m
[1;32m    715[0m [38;5;66;03m# it will also try to release it and we'll have a double-release[39;00m
[1;32m    716[0m [38;5;66;03m# mess.[39;00m

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/urllib3/connectionpool.py:386[0m, in [0;36mHTTPConnectionPool._make_request[0;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)[0m
[1;32m    385[0m [38;5;28;01mtry[39;00m:
[0;32m--> 386[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_validate_conn[49m[43m([49m[43mconn[49m[43m)[49m
[1;32m    387[0m [38;5;28;01mexcept[39;00m (SocketTimeout, BaseSSLError) [38;5;28;01mas[39;00m e:
[1;32m    388[0m     [38;5;66;03m# Py2 raises this as a BaseSSLError, Py3 raises it as socket timeout.[39;00m

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/urllib3/connectionpool.py:1042[0m, in [0;36mHTTPSConnectionPool._validate_conn[0;34m(self, conn)[0m
[1;32m   1041[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mgetattr[39m(conn, [38;5;124m"[39m[38;5;124msock[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m):  [38;5;66;03m# AppEngine might not have  `.sock`[39;00m
[0;32m-> 1042[0m     [43mconn[49m[38;5;241;43m.[39;49m[43mconnect[49m[43m([49m[43m)[49m
[1;32m   1044[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m conn[38;5;241m.[39mis_verified:

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/urllib3/connection.py:419[0m, in [0;36mHTTPSConnection.connect[0;34m(self)[0m
[1;32m    417[0m     context[38;5;241m.[39mload_default_certs()
[0;32m--> 419[0m [38;5;28mself[39m[38;5;241m.[39msock [38;5;241m=[39m [43mssl_wrap_socket[49m[43m([49m
[1;32m    420[0m [43m    [49m[43msock[49m[38;5;241;43m=[39;49m[43mconn[49m[43m,[49m
[1;32m    421[0m [43m    [49m[43mkeyfile[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mkey_file[49m[43m,[49m
[1;32m    422[0m [43m    [49m[43mcertfile[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mcert_file[49m[43m,[49m
[1;32m    423[0m [43m    [49m[43mkey_password[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mkey_password[49m[43m,[49m
[1;32m    424[0m [43m    [49m[43mca_certs[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mca_certs[49m[43m,[49m
[1;32m    425[0m [43m    [49m[43mca_cert_dir[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mca_cert_dir[49m[43m,[49m
[1;32m    426[0m [43m    [49m[43mca_cert_data[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mca_cert_data[49m[43m,[49m
[1;32m    427[0m [43m    [49m[43mserver_hostname[49m[38;5;241;43m=[39;49m[43mserver_hostname[49m[43m,[49m
[1;32m    428[0m [43m    [49m[43mssl_context[49m[38;5;241;43m=[39;49m[43mcontext[49m[43m,[49m
[1;32m    429[0m [43m    [49m[43mtls_in_tls[49m[38;5;241;43m=[39;49m[43mtls_in_tls[49m[43m,[49m
[1;32m    430[0m [43m[49m[43m)[49m
[1;32m    432[0m [38;5;66;03m# If we're using all defaults and the connection[39;00m
[1;32m    433[0m [38;5;66;03m# is TLSv1 or TLSv1.1 we throw a DeprecationWarning[39;00m
[1;32m    434[0m [38;5;66;03m# for the host.[39;00m

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/urllib3/util/ssl_.py:449[0m, in [0;36mssl_wrap_socket[0;34m(sock, keyfile, certfile, cert_reqs, ca_certs, server_hostname, ssl_version, ciphers, ssl_context, ca_cert_dir, key_password, ca_cert_data, tls_in_tls)[0m
[1;32m    448[0m [38;5;28;01mif[39;00m send_sni:
[0;32m--> 449[0m     ssl_sock [38;5;241m=[39m [43m_ssl_wrap_socket_impl[49m[43m([49m
[1;32m    450[0m [43m        [49m[43msock[49m[43m,[49m[43m [49m[43mcontext[49m[43m,[49m[43m [49m[43mtls_in_tls[49m[43m,[49m[43m [49m[43mserver_hostname[49m[38;5;241;43m=[39;49m[43mserver_hostname[49m
[1;32m    451[0m [43m    [49m[43m)[49m
[1;32m    452[0m [38;5;28;01melse[39;00m:

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/urllib3/util/ssl_.py:493[0m, in [0;36m_ssl_wrap_socket_impl[0;34m(sock, ssl_context, tls_in_tls, server_hostname)[0m
[1;32m    492[0m [38;5;28;01mif[39;00m server_hostname:
[0;32m--> 493[0m     [38;5;28;01mreturn[39;00m [43mssl_context[49m[38;5;241;43m.[39;49m[43mwrap_socket[49m[43m([49m[43msock[49m[43m,[49m[43m [49m[43mserver_hostname[49m[38;5;241;43m=[39;49m[43mserver_hostname[49m[43m)[49m
[1;32m    494[0m [38;5;28;01melse[39;00m:

File [0;32m/usr/share/miniconda/lib/python3.10/ssl.py:513[0m, in [0;36mSSLContext.wrap_socket[0;34m(self, sock, server_side, do_handshake_on_connect, suppress_ragged_eofs, server_hostname, session)[0m
[1;32m    507[0m [38;5;28;01mdef[39;00m [38;5;21mwrap_socket[39m([38;5;28mself[39m, sock, server_side[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[1;32m    508[0m                 do_handshake_on_connect[38;5;241m=[39m[38;5;28;01mTrue[39;00m,
[1;32m    509[0m                 suppress_ragged_eofs[38;5;241m=[39m[38;5;28;01mTrue[39;00m,
[1;32m    510[0m                 server_hostname[38;5;241m=[39m[38;5;28;01mNone[39;00m, session[38;5;241m=[39m[38;5;28;01mNone[39;00m):
[1;32m    511[0m     [38;5;66;03m# SSLSocket class handles server_hostname encoding before it calls[39;00m
[1;32m    512[0m     [38;5;66;03m# ctx._wrap_socket()[39;00m
[0;32m--> 513[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msslsocket_class[49m[38;5;241;43m.[39;49m[43m_create[49m[43m([49m
[1;32m    514[0m [43m        [49m[43msock[49m[38;5;241;43m=[39;49m[43msock[49m[43m,[49m
[1;32m    515[0m [43m        [49m[43mserver_side[49m[38;5;241;43m=[39;49m[43mserver_side[49m[43m,[49m
[1;32m    516[0m [43m        [49m[43mdo_handshake_on_connect[49m[38;5;241;43m=[39;49m[43mdo_handshake_on_connect[49m[43m,[49m
[1;32m    517[0m [43m        [49m[43msuppress_ragged_eofs[49m[38;5;241;43m=[39;49m[43msuppress_ragged_eofs[49m[43m,[49m
[1;32m    518[0m [43m        [49m[43mserver_hostname[49m[38;5;241;43m=[39;49m[43mserver_hostname[49m[43m,[49m
[1;32m    519[0m [43m        [49m[43mcontext[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[43m,[49m
[1;32m    520[0m [43m        [49m[43msession[49m[38;5;241;43m=[39;49m[43msession[49m
[1;32m    521[0m [43m    [49m[43m)[49m

File [0;32m/usr/share/miniconda/lib/python3.10/ssl.py:1071[0m, in [0;36mSSLSocket._create[0;34m(cls, sock, server_side, do_handshake_on_connect, suppress_ragged_eofs, server_hostname, context, session)[0m
[1;32m   1070[0m             [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mdo_handshake_on_connect should not be specified for non-blocking sockets[39m[38;5;124m"[39m)
[0;32m-> 1071[0m         [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mdo_handshake[49m[43m([49m[43m)[49m
[1;32m   1072[0m [38;5;28;01mexcept[39;00m ([38;5;167;01mOSError[39;00m, [38;5;167;01mValueError[39;00m):

File [0;32m/usr/share/miniconda/lib/python3.10/ssl.py:1342[0m, in [0;36mSSLSocket.do_handshake[0;34m(self, block)[0m
[1;32m   1341[0m         [38;5;28mself[39m[38;5;241m.[39msettimeout([38;5;28;01mNone[39;00m)
[0;32m-> 1342[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_sslobj[49m[38;5;241;43m.[39;49m[43mdo_handshake[49m[43m([49m[43m)[49m
[1;32m   1343[0m [38;5;28;01mfinally[39;00m:

[0;31mSSLEOFError[0m: EOF occurred in violation of protocol (_ssl.c:997)

During handling of the above exception, another exception occurred:

[0;31mMaxRetryError[0m                             Traceback (most recent call last)
File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/requests/adapters.py:489[0m, in [0;36mHTTPAdapter.send[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    488[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m chunked:
[0;32m--> 489[0m     resp [38;5;241m=[39m [43mconn[49m[38;5;241;43m.[39;49m[43murlopen[49m[43m([49m
[1;32m    490[0m [43m        [49m[43mmethod[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mmethod[49m[43m,[49m
[1;32m    491[0m [43m        [49m[43murl[49m[38;5;241;43m=[39;49m[43murl[49m[43m,[49m
[1;32m    492[0m [43m        [49m[43mbody[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mbody[49m[43m,[49m
[1;32m    493[0m [43m        [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mheaders[49m[43m,[49m
[1;32m    494[0m [43m        [49m[43mredirect[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m    495[0m [43m        [49m[43massert_same_host[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m    496[0m [43m        [49m[43mpreload_content[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m    497[0m [43m        [49m[43mdecode_content[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m    498[0m [43m        [49m[43mretries[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmax_retries[49m[43m,[49m
[1;32m    499[0m [43m        [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout[49m[43m,[49m
[1;32m    500[0m [43m    [49m[43m)[49m
[1;32m    502[0m [38;5;66;03m# Send the request.[39;00m
[1;32m    503[0m [38;5;28;01melse[39;00m:

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/urllib3/connectionpool.py:787[0m, in [0;36mHTTPConnectionPool.urlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    785[0m     e [38;5;241m=[39m ProtocolError([38;5;124m"[39m[38;5;124mConnection aborted.[39m[38;5;124m"[39m, e)
[0;32m--> 787[0m retries [38;5;241m=[39m [43mretries[49m[38;5;241;43m.[39;49m[43mincrement[49m[43m([49m
[1;32m    788[0m [43m    [49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[43merror[49m[38;5;241;43m=[39;49m[43me[49m[43m,[49m[43m [49m[43m_pool[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43m_stacktrace[49m[38;5;241;43m=[39;49m[43msys[49m[38;5;241;43m.[39;49m[43mexc_info[49m[43m([49m[43m)[49m[43m[[49m[38;5;241;43m2[39;49m[43m][49m
[1;32m    789[0m [43m[49m[43m)[49m
[1;32m    790[0m retries[38;5;241m.[39msleep()

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/urllib3/util/retry.py:592[0m, in [0;36mRetry.increment[0;34m(self, method, url, response, error, _pool, _stacktrace)[0m
[1;32m    591[0m [38;5;28;01mif[39;00m new_retry[38;5;241m.[39mis_exhausted():
[0;32m--> 592[0m     [38;5;28;01mraise[39;00m MaxRetryError(_pool, url, error [38;5;129;01mor[39;00m ResponseError(cause))
[1;32m    594[0m log[38;5;241m.[39mdebug([38;5;124m"[39m[38;5;124mIncremented Retry for (url=[39m[38;5;124m'[39m[38;5;132;01m%s[39;00m[38;5;124m'[39m[38;5;124m): [39m[38;5;132;01m%r[39;00m[38;5;124m"[39m, url, new_retry)

[0;31mMaxRetryError[0m: HTTPSConnectionPool(host='catalogs.mast.stsci.edu', port=443): Max retries exceeded with url: /api/v0.1/hsc/v3/propermotions.csv?objid=4000711121911&columns=%5Bpmlon%2Cpmlonerr%2Cpmlat%2Cpmlaterr%5D (Caused by SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:997)')))

During handling of the above exception, another exception occurred:

[0;31mSSLError[0m                                  Traceback (most recent call last)
Cell [0;32mIn[19], line 18[0m
[1;32m     16[0m [38;5;28mprint[39m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mPlotting [39m[38;5;132;01m{[39;00m[38;5;28mlen[39m(wpmh)[38;5;132;01m}[39;00m[38;5;124m objects[39m[38;5;124m"[39m)
[1;32m     17[0m [38;5;28;01mfor[39;00m o [38;5;129;01min[39;00m tab[[38;5;124m"[39m[38;5;124mObjID[39m[38;5;124m"[39m][wpmh]:
[0;32m---> 18[0m     [43mpositions[49m[43m([49m[43mo[49m[43m)[49m

Cell [0;32mIn[17], line 15[0m, in [0;36mpositions[0;34m(Obj)[0m
[1;32m     12[0m pos[38;5;241m.[39msort([38;5;124m'[39m[38;5;124mdT[39m[38;5;124m'[39m)
[1;32m     14[0m [38;5;66;03m# get the PM fit parameters[39;00m
[0;32m---> 15[0m pm [38;5;241m=[39m ascii[38;5;241m.[39mread([43mhscsearch[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mpropermotions[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43mcolumns[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mpmlon,pmlonerr,pmlat,pmlaterr[39;49m[38;5;124;43m"[39;49m[38;5;241;43m.[39;49m[43msplit[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43m,[39;49m[38;5;124;43m'[39;49m[43m)[49m[43m,[49m[43m [49m[43mobjid[49m[38;5;241;43m=[39;49m[43mObj[49m[43m)[49m)
[1;32m     17[0m lpm [38;5;241m=[39m pm[[38;5;124m'[39m[38;5;124mpmlon[39m[38;5;124m'[39m][[38;5;241m0[39m]
[1;32m     18[0m bpm [38;5;241m=[39m pm[[38;5;124m'[39m[38;5;124mpmlat[39m[38;5;124m'[39m][[38;5;241m0[39m]

Cell [0;32mIn[3], line 71[0m, in [0;36mhscsearch[0;34m(table, release, magtype, format, columns, baseurl, verbose, **kw)[0m
[1;32m     67[0m     data[[38;5;124m'[39m[38;5;124mcolumns[39m[38;5;124m'[39m] [38;5;241m=[39m [38;5;124mf[39m[38;5;124m"[39m[38;5;124m[[39m[38;5;132;01m{[39;00m[38;5;124m'[39m[38;5;124m,[39m[38;5;124m'[39m[38;5;241m.[39mjoin(columns)[38;5;132;01m}[39;00m[38;5;124m][39m[38;5;124m"[39m
[1;32m     69[0m [38;5;66;03m# either get or post works[39;00m
[1;32m     70[0m [38;5;66;03m# r = requests.post(url, data=data)[39;00m
[0;32m---> 71[0m r [38;5;241m=[39m [43mrequests[49m[38;5;241;43m.[39;49m[43mget[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mparams[49m[38;5;241;43m=[39;49m[43mdata[49m[43m)[49m
[1;32m     73[0m [38;5;28;01mif[39;00m verbose:
[1;32m     74[0m     [38;5;28mprint[39m(r[38;5;241m.[39murl)

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/requests/api.py:73[0m, in [0;36mget[0;34m(url, params, **kwargs)[0m
[1;32m     62[0m [38;5;28;01mdef[39;00m [38;5;21mget[39m(url, params[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m     63[0m [38;5;250m    [39m[38;5;124mr[39m[38;5;124;03m"""Sends a GET request.[39;00m
[1;32m     64[0m 
[1;32m     65[0m [38;5;124;03m    :param url: URL for the new :class:`Request` object.[39;00m
[0;32m   (...)[0m
[1;32m     70[0m [38;5;124;03m    :rtype: requests.Response[39;00m
[1;32m     71[0m [38;5;124;03m    """[39;00m
[0;32m---> 73[0m     [38;5;28;01mreturn[39;00m [43mrequest[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mget[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[43mparams[49m[38;5;241;43m=[39;49m[43mparams[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/requests/api.py:59[0m, in [0;36mrequest[0;34m(method, url, **kwargs)[0m
[1;32m     55[0m [38;5;66;03m# By using the 'with' statement we are sure the session is closed, thus we[39;00m
[1;32m     56[0m [38;5;66;03m# avoid leaving sockets open which can trigger a ResourceWarning in some[39;00m
[1;32m     57[0m [38;5;66;03m# cases, and look like a memory leak in others.[39;00m
[1;32m     58[0m [38;5;28;01mwith[39;00m sessions[38;5;241m.[39mSession() [38;5;28;01mas[39;00m session:
[0;32m---> 59[0m     [38;5;28;01mreturn[39;00m [43msession[49m[38;5;241;43m.[39;49m[43mrequest[49m[43m([49m[43mmethod[49m[38;5;241;43m=[39;49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[38;5;241;43m=[39;49m[43murl[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/requests/sessions.py:587[0m, in [0;36mSession.request[0;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[1;32m    582[0m send_kwargs [38;5;241m=[39m {
[1;32m    583[0m     [38;5;124m"[39m[38;5;124mtimeout[39m[38;5;124m"[39m: timeout,
[1;32m    584[0m     [38;5;124m"[39m[38;5;124mallow_redirects[39m[38;5;124m"[39m: allow_redirects,
[1;32m    585[0m }
[1;32m    586[0m send_kwargs[38;5;241m.[39mupdate(settings)
[0;32m--> 587[0m resp [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msend[49m[43m([49m[43mprep[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43msend_kwargs[49m[43m)[49m
[1;32m    589[0m [38;5;28;01mreturn[39;00m resp

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/requests/sessions.py:701[0m, in [0;36mSession.send[0;34m(self, request, **kwargs)[0m
[1;32m    698[0m start [38;5;241m=[39m preferred_clock()
[1;32m    700[0m [38;5;66;03m# Send the request[39;00m
[0;32m--> 701[0m r [38;5;241m=[39m [43madapter[49m[38;5;241;43m.[39;49m[43msend[49m[43m([49m[43mrequest[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    703[0m [38;5;66;03m# Total elapsed time of the request (approximately)[39;00m
[1;32m    704[0m elapsed [38;5;241m=[39m preferred_clock() [38;5;241m-[39m start

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/requests/adapters.py:563[0m, in [0;36mHTTPAdapter.send[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    559[0m         [38;5;28;01mraise[39;00m ProxyError(e, request[38;5;241m=[39mrequest)
[1;32m    561[0m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(e[38;5;241m.[39mreason, _SSLError):
[1;32m    562[0m         [38;5;66;03m# This branch is for urllib3 v1.22 and later.[39;00m
[0;32m--> 563[0m         [38;5;28;01mraise[39;00m SSLError(e, request[38;5;241m=[39mrequest)
[1;32m    565[0m     [38;5;28;01mraise[39;00m [38;5;167;01mConnectionError[39;00m(e, request[38;5;241m=[39mrequest)
[1;32m    567[0m [38;5;28;01mexcept[39;00m ClosedPoolError [38;5;28;01mas[39;00m e:

[0;31mSSLError[0m: HTTPSConnectionPool(host='catalogs.mast.stsci.edu', port=443): Max retries exceeded with url: /api/v0.1/hsc/v3/propermotions.csv?objid=4000711121911&columns=%5Bpmlon%2Cpmlonerr%2Cpmlat%2Cpmlaterr%5D (Caused by SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:997)')))

