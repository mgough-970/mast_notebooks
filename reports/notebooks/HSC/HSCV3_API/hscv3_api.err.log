Traceback (most recent call last):
  File "/usr/share/miniconda/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/share/miniconda/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# save typing a quoted list of columns
columns = """MatchID,MatchRA,MatchDec,NumFilters,NumVisits,NumImages,StartMJD,StopMJD,
    A_F475W, A_F475W_N, A_F475W_MAD,
    A_F814W, A_F814W_N, A_F814W_MAD""".split(",")
columns = [x.strip() for x in columns]
columns = [x for x in columns if x and not x.startswith('#')]

constraints = {'A_F475W_N.gte': 10, 'A_F814W_N.gte': 10}

t0 = time.time()
tab = hsccone(ra_ic1613, dec_ic1613, 0.5, table="summary", release='v3', columns=columns, verbose=True, format="table", **constraints)
print(f"{(time.time()-t0):.1f} s: retrieved data and converted to {len(tab)}-row astropy table")

# clean up the output format
tab['A_F475W'].format = "{:.3f}"
tab['A_F475W_MAD'].format = "{:.3f}"
tab['A_F814W'].format = "{:.3f}"
tab['A_F814W_MAD'].format = "{:.3f}"
tab['MatchRA'].format = "{:.6f}"
tab['MatchDec'].format = "{:.6f}"
tab['StartMJD'].format = "{:.5f}"
tab['StopMJD'].format = "{:.5f}"
tab
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyError[0m                                  Traceback (most recent call last)
Cell [0;32mIn[6], line 11[0m
[1;32m      8[0m constraints [38;5;241m=[39m {[38;5;124m'[39m[38;5;124mA_F475W_N.gte[39m[38;5;124m'[39m: [38;5;241m10[39m, [38;5;124m'[39m[38;5;124mA_F814W_N.gte[39m[38;5;124m'[39m: [38;5;241m10[39m}
[1;32m     10[0m t0 [38;5;241m=[39m time[38;5;241m.[39mtime()
[0;32m---> 11[0m tab [38;5;241m=[39m [43mhsccone[49m[43m([49m[43mra_ic1613[49m[43m,[49m[43m [49m[43mdec_ic1613[49m[43m,[49m[43m [49m[38;5;241;43m0.5[39;49m[43m,[49m[43m [49m[43mtable[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43msummary[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43mrelease[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mv3[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mcolumns[49m[38;5;241;43m=[39;49m[43mcolumns[49m[43m,[49m[43m [49m[43mverbose[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m [49m[38;5;28;43mformat[39;49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mtable[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mconstraints[49m[43m)[49m
[1;32m     12[0m [38;5;28mprint[39m([38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00m(time[38;5;241m.[39mtime()[38;5;241m-[39mt0)[38;5;132;01m:[39;00m[38;5;124m.1f[39m[38;5;132;01m}[39;00m[38;5;124m s: retrieved data and converted to [39m[38;5;132;01m{[39;00m[38;5;28mlen[39m(tab)[38;5;132;01m}[39;00m[38;5;124m-row astropy table[39m[38;5;124m"[39m)
[1;32m     14[0m [38;5;66;03m# clean up the output format[39;00m

Cell [0;32mIn[3], line 27[0m, in [0;36mhsccone[0;34m(ra, dec, radius, table, release, format, magtype, columns, baseurl, verbose, **kw)[0m
[1;32m     25[0m data[[38;5;124m'[39m[38;5;124mdec[39m[38;5;124m'[39m] [38;5;241m=[39m dec
[1;32m     26[0m data[[38;5;124m'[39m[38;5;124mradius[39m[38;5;124m'[39m] [38;5;241m=[39m radius
[0;32m---> 27[0m [38;5;28;01mreturn[39;00m [43mhscsearch[49m[43m([49m[43mtable[49m[38;5;241;43m=[39;49m[43mtable[49m[43m,[49m[43m [49m[43mrelease[49m[38;5;241;43m=[39;49m[43mrelease[49m[43m,[49m[43m [49m[38;5;28;43mformat[39;49m[38;5;241;43m=[39;49m[38;5;28;43mformat[39;49m[43m,[49m[43m [49m[43mmagtype[49m[38;5;241;43m=[39;49m[43mmagtype[49m[43m,[49m
[1;32m     28[0m [43m                 [49m[43mcolumns[49m[38;5;241;43m=[39;49m[43mcolumns[49m[43m,[49m[43m [49m[43mbaseurl[49m[38;5;241;43m=[39;49m[43mbaseurl[49m[43m,[49m[43m [49m[43mverbose[49m[38;5;241;43m=[39;49m[43mverbose[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mdata[49m[43m)[49m

Cell [0;32mIn[3], line 61[0m, in [0;36mhscsearch[0;34m(table, release, magtype, format, columns, baseurl, verbose, **kw)[0m
[1;32m     57[0m [38;5;28;01mif[39;00m columns:
[1;32m     58[0m     [38;5;66;03m# check that column values are legal[39;00m
[1;32m     59[0m     [38;5;66;03m# create a dictionary to speed this up[39;00m
[1;32m     60[0m     dcols [38;5;241m=[39m {}
[0;32m---> 61[0m     [38;5;28;01mfor[39;00m col [38;5;129;01min[39;00m [43mhscmetadata[49m[43m([49m[43mtable[49m[43m,[49m[43m [49m[43mrelease[49m[43m,[49m[43m [49m[43mmagtype[49m[43m)[49m[[38;5;124m'[39m[38;5;124mname[39m[38;5;124m'[39m]:
[1;32m     62[0m         dcols[col[38;5;241m.[39mlower()] [38;5;241m=[39m [38;5;241m1[39m
[1;32m     63[0m     badcols [38;5;241m=[39m []

Cell [0;32mIn[3], line 106[0m, in [0;36mhscmetadata[0;34m(table, release, magtype, baseurl)[0m
[1;32m    104[0m v [38;5;241m=[39m r[38;5;241m.[39mjson()
[1;32m    105[0m [38;5;66;03m# convert to astropy table[39;00m
[0;32m--> 106[0m tab [38;5;241m=[39m Table(rows[38;5;241m=[39m[(x[[38;5;124m'[39m[38;5;124mname[39m[38;5;124m'[39m], x[[38;5;124m'[39m[38;5;124mtype[39m[38;5;124m'[39m], x[[38;5;124m'[39m[38;5;124mdescription[39m[38;5;124m'[39m]) [38;5;28;01mfor[39;00m x [38;5;129;01min[39;00m v],
[1;32m    107[0m             names[38;5;241m=[39m([38;5;124m'[39m[38;5;124mname[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mtype[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mdescription[39m[38;5;124m'[39m))
[1;32m    108[0m [38;5;28;01mreturn[39;00m tab

Cell [0;32mIn[3], line 106[0m, in [0;36m<listcomp>[0;34m(.0)[0m
[1;32m    104[0m v [38;5;241m=[39m r[38;5;241m.[39mjson()
[1;32m    105[0m [38;5;66;03m# convert to astropy table[39;00m
[0;32m--> 106[0m tab [38;5;241m=[39m Table(rows[38;5;241m=[39m[(x[[38;5;124m'[39m[38;5;124mname[39m[38;5;124m'[39m], [43mx[49m[43m[[49m[38;5;124;43m'[39;49m[38;5;124;43mtype[39;49m[38;5;124;43m'[39;49m[43m][49m, x[[38;5;124m'[39m[38;5;124mdescription[39m[38;5;124m'[39m]) [38;5;28;01mfor[39;00m x [38;5;129;01min[39;00m v],
[1;32m    107[0m             names[38;5;241m=[39m([38;5;124m'[39m[38;5;124mname[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mtype[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mdescription[39m[38;5;124m'[39m))
[1;32m    108[0m [38;5;28;01mreturn[39;00m tab

[0;31mKeyError[0m: 'type'

