Traceback (most recent call last):
  File "/usr/share/miniconda/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
lc = tpf.to_lightcurve(aperture_mask="pipeline")
lc.plot();
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Cell [0;32mIn[8], line 1[0m
[0;32m----> 1[0m lc [38;5;241m=[39m [43mtpf[49m[38;5;241;43m.[39;49m[43mto_lightcurve[49m[43m([49m[43maperture_mask[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mpipeline[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m      2[0m lc[38;5;241m.[39mplot();

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/lightkurve/targetpixelfile.py:571[0m, in [0;36mTargetPixelFile.to_lightcurve[0;34m(self, method, corrector, **kwargs)[0m
[1;32m    569[0m method [38;5;241m=[39m validate_method(method, supported_methods[38;5;241m=[39m[[38;5;124m"[39m[38;5;124maperture[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mprf[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124msap[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124msff[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mcbv[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mpld[39m[38;5;124m"[39m])
[1;32m    570[0m [38;5;28;01mif[39;00m method [38;5;129;01min[39;00m [[38;5;124m"[39m[38;5;124maperture[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124msap[39m[38;5;124m"[39m]:
[0;32m--> 571[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mextract_aperture_photometry[49m[43m([49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    572[0m [38;5;28;01melif[39;00m method [38;5;241m==[39m [38;5;124m"[39m[38;5;124mprf[39m[38;5;124m"[39m:
[1;32m    573[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mprf_lightcurve([38;5;241m*[39m[38;5;241m*[39mkwargs)

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/lightkurve/targetpixelfile.py:2172[0m, in [0;36mKeplerTargetPixelFile.extract_aperture_photometry[0;34m(self, aperture_mask, flux_method, centroid_method)[0m
[1;32m   2168[0m [38;5;66;03m# explicitly resolve default, so that the aperture_mask set in meta[39;00m
[1;32m   2169[0m [38;5;66;03m# later will be the resolved one[39;00m
[1;32m   2170[0m aperture_mask [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_resolve_default_aperture_mask(aperture_mask)
[0;32m-> 2172[0m flux, flux_err, centroid_col, centroid_row [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_aperture_photometry[49m[43m([49m
[1;32m   2173[0m [43m    [49m[43maperture_mask[49m[38;5;241;43m=[39;49m[43maperture_mask[49m[43m,[49m
[1;32m   2174[0m [43m    [49m[43mflux_method[49m[38;5;241;43m=[39;49m[43mflux_method[49m[43m,[49m
[1;32m   2175[0m [43m    [49m[43mcentroid_method[49m[38;5;241;43m=[39;49m[43mcentroid_method[49m[43m,[49m
[1;32m   2176[0m [43m[49m[43m)[49m
[1;32m   2177[0m keys [38;5;241m=[39m {
[1;32m   2178[0m     [38;5;124m"[39m[38;5;124mcentroid_col[39m[38;5;124m"[39m: centroid_col,
[1;32m   2179[0m     [38;5;124m"[39m[38;5;124mcentroid_row[39m[38;5;124m"[39m: centroid_row,
[0;32m   (...)[0m
[1;32m   2189[0m     [38;5;124m"[39m[38;5;124mtargetid[39m[38;5;124m"[39m: [38;5;28mself[39m[38;5;241m.[39mtargetid,
[1;32m   2190[0m }
[1;32m   2191[0m meta [38;5;241m=[39m {[38;5;124m"[39m[38;5;124mAPERTURE_MASK[39m[38;5;124m"[39m: aperture_mask}

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/lightkurve/targetpixelfile.py:867[0m, in [0;36mTargetPixelFile._aperture_photometry[0;34m(self, aperture_mask, flux_method, centroid_method)[0m
[1;32m    864[0m     log[38;5;241m.[39mwarning([38;5;124m"[39m[38;5;124mWarning: aperture mask contains zero pixels.[39m[38;5;124m"[39m)
[1;32m    866[0m [38;5;66;03m# Estimate centroids[39;00m
[0;32m--> 867[0m centroid_col, centroid_row [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mestimate_centroids[49m[43m([49m
[1;32m    868[0m [43m    [49m[43mapmask[49m[43m,[49m[43m [49m[43mmethod[49m[38;5;241;43m=[39;49m[43mcentroid_method[49m
[1;32m    869[0m [43m[49m[43m)[49m
[1;32m    871[0m [38;5;66;03m# Estimate flux[39;00m
[1;32m    872[0m [38;5;28;01mif[39;00m flux_method [38;5;241m==[39m [38;5;124m"[39m[38;5;124msum[39m[38;5;124m"[39m:

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/lightkurve/targetpixelfile.py:814[0m, in [0;36mTargetPixelFile.estimate_centroids[0;34m(self, aperture_mask, method)[0m
[1;32m    812[0m method [38;5;241m=[39m validate_method(method, [[38;5;124m"[39m[38;5;124mmoments[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mquadratic[39m[38;5;124m"[39m])
[1;32m    813[0m [38;5;28;01mif[39;00m method [38;5;241m==[39m [38;5;124m"[39m[38;5;124mmoments[39m[38;5;124m"[39m:
[0;32m--> 814[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_estimate_centroids_via_moments[49m[43m([49m[43maperture_mask[49m[38;5;241;43m=[39;49m[43maperture_mask[49m[43m)[49m
[1;32m    815[0m [38;5;28;01melif[39;00m method [38;5;241m==[39m [38;5;124m"[39m[38;5;124mquadratic[39m[38;5;124m"[39m:
[1;32m    816[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_estimate_centroids_via_quadratic(aperture_mask[38;5;241m=[39maperture_mask)

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/lightkurve/targetpixelfile.py:821[0m, in [0;36mTargetPixelFile._estimate_centroids_via_moments[0;34m(self, aperture_mask)[0m
[1;32m    818[0m [38;5;28;01mdef[39;00m [38;5;21m_estimate_centroids_via_moments[39m([38;5;28mself[39m, aperture_mask):
[1;32m    819[0m [38;5;250m    [39m[38;5;124;03m"""Compute the "center of mass" of the light based on the 2D moments;[39;00m
[1;32m    820[0m [38;5;124;03m    this is a helper method for `estimate_centroids()`."""[39;00m
[0;32m--> 821[0m     aperture_mask [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_parse_aperture_mask[49m[43m([49m[43maperture_mask[49m[43m)[49m
[1;32m    822[0m     yy, xx [38;5;241m=[39m np[38;5;241m.[39mindices([38;5;28mself[39m[38;5;241m.[39mshape[[38;5;241m1[39m:])
[1;32m    823[0m     yy [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mrow [38;5;241m+[39m yy

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/lightkurve/targetpixelfile.py:659[0m, in [0;36mTargetPixelFile._parse_aperture_mask[0;34m(self, aperture_mask)[0m
[1;32m    653[0m     [38;5;28;01melif[39;00m (
[1;32m    654[0m         np[38;5;241m.[39missubdtype(aperture_mask[38;5;241m.[39mdtype, np[38;5;241m.[39minteger)
[1;32m    655[0m         [38;5;129;01mand[39;00m ((aperture_mask [38;5;241m&[39m [38;5;241m2[39m) [38;5;241m==[39m [38;5;241m2[39m)[38;5;241m.[39many()
[1;32m    656[0m     ):
[1;32m    657[0m         [38;5;66;03m# Kepler and TESS pipeline style integer flags[39;00m
[1;32m    658[0m         aperture_mask [38;5;241m=[39m (aperture_mask [38;5;241m&[39m [38;5;241m2[39m) [38;5;241m==[39m [38;5;241m2[39m
[0;32m--> 659[0m     [38;5;28;01melif[39;00m [38;5;28misinstance[39m(aperture_mask[38;5;241m.[39mflat[[38;5;241m0[39m], (np[38;5;241m.[39minteger, [43mnp[49m[38;5;241;43m.[39;49m[43mfloat[49m)):
[1;32m    660[0m         aperture_mask [38;5;241m=[39m aperture_mask[38;5;241m.[39mastype([38;5;28mbool[39m)
[1;32m    661[0m [38;5;28mself[39m[38;5;241m.[39m_last_aperture_mask [38;5;241m=[39m aperture_mask

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/numpy/__init__.py:284[0m, in [0;36m__getattr__[0;34m(attr)[0m
[1;32m    281[0m     [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01mtesting[39;00m [38;5;28;01mimport[39;00m Tester
[1;32m    282[0m     [38;5;28;01mreturn[39;00m Tester
[0;32m--> 284[0m [38;5;28;01mraise[39;00m [38;5;167;01mAttributeError[39;00m([38;5;124m"[39m[38;5;124mmodule [39m[38;5;132;01m{!r}[39;00m[38;5;124m has no attribute [39m[38;5;124m"[39m
[1;32m    285[0m                      [38;5;124m"[39m[38;5;132;01m{!r}[39;00m[38;5;124m"[39m[38;5;241m.[39mformat([38;5;18m__name__[39m, attr))

[0;31mAttributeError[0m: module 'numpy' has no attribute 'float'
AttributeError: module 'numpy' has no attribute 'float'

